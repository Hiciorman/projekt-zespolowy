@model ProjectManager.WebApp.Models.CreateAssignmentViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Assignment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Assignment.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Assignment.Name, new { htmlAttributes = new { @class = "form-control" } })
               @* @Html.ValidationMessageFor(model => model.Assignment.Name, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Assignment.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Assignment.Description, new { htmlAttributes = new { @class = "form-control" } })
               @* @Html.ValidationMessageFor(model => model.Assignment.Description, "", new { @class = "text-danger" })*@
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.Assignment.ProjectId, "Project", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{  
                    
                        @Html.DropDownList("Assignment.ProjectId", Model.ListOfProjects, htmlAttributes: new { @class = "form-control" });
                       
                    
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Assignment.OwnerId, "Owner", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               
                @Html.DropDownList("Assignment.OwnerId", Model.ListOfUsers, htmlAttributes: new { @class = "form-control" })
               @* @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Assignment.AssignedToId, "Assigned To", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Assignment.AssignedToId", Model.ListOfUsers, htmlAttributes: new { @class = "form-control" })
               @* @Html.ValidationMessageFor(model => model.AssignedToId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Assignment.StatusId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Assignment.StatusId", Model.ListOfStatuses, htmlAttributes: new { @class = "form-control" })
               @* @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Assignment.PriorityId, "Priority", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Assignment.PriorityId", Model.ListOfPriorities, htmlAttributes: new { @class = "form-control" })
               @* @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Assignment.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Assignment.CategoryId", Model.ListOfCategories, htmlAttributes: new { @class = "form-control" })
                @*@Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

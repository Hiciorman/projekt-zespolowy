@using System.Web.Script.Services
@using ProjectManager.Domain
@model ProjectManager.WebApp.Models.DashboardViewModel
<style>
    #breadcrumbs-three {
        overflow: hidden;
        width: 100%;
    }

        #breadcrumbs-three li {
            margin: 0 2em 0 0;
        }

        #breadcrumbs-three a {
            padding: .7em 1em .7em 2em;
            float: left;
            text-decoration: none;
            color: #444;
            background: #ddd;
            position: relative;
            z-index: 1;
            text-shadow: 0 1px 0 rgba(255,255,255,.5);
            border-radius: .4em 0 0 .4em;
        }

            #breadcrumbs-three a:hover {
                background: #abe0ef;
            }

            #breadcrumbs-three a::after {
                background: #ddd;
                content: "";
                height: 2.5em;
                margin-top: -1.25em;
                position: absolute;
                right: -1em;
                top: 50%;
                width: 2.5em;
                z-index: -1;
                transform: rotate(45deg);
                border-radius: .4em;
            }

            #breadcrumbs-three a:hover::after {
                background: #abe0ef;
            }

        #breadcrumbs-three .current,
        #breadcrumbs-three .current:hover {
            font-weight: bold;
            background: none;
        }

            #breadcrumbs-three .current::after {
                content: normal;
            }

    .label-backlog {
        background-color: #6B00D6;
        color: #fff;
    }

    .label-todo {
        background-color: #E32707;
        color: #fff;
    }

    .label-inprogress {
        background-color: #E5750B;
        color: #fff;
    }

    .label-ready {
        background-color: #D9E812;
        color: #fff;
    }

    .label-done {
        background-color: #00D924;
        color: #fff;
    }

    .table > thead > tr > td.critical,
    .table > tbody > tr > td.critical,
    .table > tfoot > tr > td.critical,
    .table > thead > tr > th.critical,
    .table > tbody > tr > th.critical,
    .table > tfoot > tr > th.critical,
    .table > thead > tr.critical > td,
    .table > tbody > tr.critical > td,
    .table > tfoot > tr.critical > td,
    .table > thead > tr.critical > th,
    .table > tbody > tr.critical > th,
    .table > tfoot > tr.critical > th {
        background-color: #FFE7E8;
    }

    .table > thead > tr > td.high,
    .table > tbody > tr > td.high,
    .table > tfoot > tr > td.high,
    .table > thead > tr > th.high,
    .table > tbody > tr > th.high,
    .table > tfoot > tr > th.high,
    .table > thead > tr.critical > td,
    .table > tbody > tr.critical > td,
    .table > tfoot > tr.critical > td,
    .table > thead > tr.critical > th,
    .table > tbody > tr.critical > th,
    .table > tfoot > tr.critical > th {
        background-color: #FFE7E8;
    }

    .table > thead > tr > td.normal,
    .table > tbody > tr > td.normal,
    .table > tfoot > tr > td.normal,
    .table > thead > tr > th.normal,
    .table > tbody > tr > th.normal,
    .table > tfoot > tr > th.normal,
    .table > thead > tr.normal > td,
    .table > tbody > tr.normal > td,
    .table > tfoot > tr.normal > td,
    .table > thead > tr.normal > th,
    .table > tbody > tr.normal > th,
    .table > tfoot > tr.normal > th {
        background-color: #FFE7E8;
    }

    .table > thead > tr > td.low,
    .table > tbody > tr > td.low,
    .table > tfoot > tr > td.low,
    .table > thead > tr > th.low,
    .table > tbody > tr > th.low,
    .table > tfoot > tr > th.low,
    .table > thead > tr.low > td,
    .table > tbody > tr.low > td,
    .table > tfoot > tr.low > td,
    .table > thead > tr.low > th,
    .table > tbody > tr.low > th,
    .table > tfoot > tr.low > th {
        background-color: #FFE7E8;
    }

    .table > thead > tr > td.minor,
    .table > tbody > tr > td.minor,
    .table > tfoot > tr > td.minor,
    .table > thead > tr > th.minor,
    .table > tbody > tr > th.minor,
    .table > tfoot > tr > th.minor,
    .table > thead > tr.minor > td,
    .table > tbody > tr.minor > td,
    .table > tfoot > tr.minor > td,
    .table > thead > tr.minor > th,
    .table > tbody > tr.minor > th,
    .table > tfoot > tr.minor > th {
        background-color: #E8FBFF;
    }

    .table-curved {
        border-collapse: separate;
    }

    .table-curved {
        border: solid #ccc 1px;
        border-radius: 6px;
        border-left: 0px;
    }

        .table-curved td, .table-curved th {
            border-left: 1px solid #ccc;
            border-top: 1px solid #ccc;
        }

        .table-curved th {
            border-top: none;
        }

            .table-curved th:first-child {
                border-radius: 6px 0 0 0;
            }

            .table-curved th:last-child {
                border-radius: 0 6px 0 0;
            }

            .table-curved th:only-child {
                border-radius: 6px 6px 0 0;
            }

        .table-curved tr:last-child td:first-child {
            border-radius: 0 0 0 6px;
        }

        .table-curved tr:last-child td:last-child {
            border-radius: 0 0 6px 0;
        }
</style>

<div class="container">
    <div class="row">
        <div>
            <div class="row" style="text-align: center">
                <div style="font-size: xx-large; color: dimgray">
                    Welcome @Model.User.UserName
                </div>
                <br />
                <br />
            </div>
            <div class="row" style="text-align: center">
                <div class="col-md-4">
                    <canvas id="myTasks" width="200" height="200"></canvas>
                    <h3>Priority</h3>
                </div>
                <div class="col-md-4">
                    <canvas id="myTasks2" width="200" height="200"></canvas>
                    <h3>Status</h3>
                </div>

                <div class="col-md-4">
                    <canvas id="myTasks3" width="200" height="200"></canvas>
                    <h3>Category</h3>
                </div>
            </div>
            <br />
            <br />
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="">
                <div class="well">tutaj beda sprinty</div>
            </div>
            <div class="">
                <div class="well">a tutaj nie wiem co</div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="">
                
                <table class="table table-striped table-bordered table-hover table-curved">
                    <caption>
                        <h3>My Tasks:</h3>
                    </caption>
                    <thead>
                        <tr>
                            <th>#</th>
                            <th class="text-center">name</th>
                            <th class="text-center">status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{ int x = 0;}
                        @foreach (var task in @Model.Assignments)
                        {
                            var type = "";

                            switch (task.Priority.Type)
                            {
                                case PriorityType.Minor:
                                    type = "minor";
                                    break;
                                case PriorityType.Low:
                                    type = "low";
                                    break;
                                case PriorityType.Normal:
                                    type = "normal";
                                    break;
                                case PriorityType.High:
                                    type = "high";
                                    break;
                                case PriorityType.Criticial:
                                    type = "critical";
                                    break;
                            }


                            var stype = "class=\"" + type + "\"";

                        <tr @Html.Raw(stype)>

                            <td>@x</td>
                            <td>@task.Name</td>
                            <td>
                                @switch (task.Status.Type)
                                    {
                                        case StatusType.Backlog:
                                    <span class="label label-backlog" title="Backlog">Backlog</span>
                                            break;
                                        case StatusType.Todo:
                                    <span class="label label-todo" title="ToDo">To Do</span>
                                            break;
                                        case StatusType.InProgress:
                                    <span class="label label-inprogress" title="InProgress">In Progress</span>
                                            break;
                                        case StatusType.ReadyForReview:
                                    <span class="label label-ready" title="ReadyForReview">Ready For Review</span>
                                            break;
                                        case StatusType.Done:
                                    <span class="label label-done" title="Done">Done</span>
                                            break;
                                    }
                            </td>

                        </tr>
                            x++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-md-4">
            <div class="">
                <table class="table table-striped table-bordered table-hover table-curved">
                    <caption>
                        <h3>Projects:</h3>
                    </caption>
                    <thead>
                    <tr>
                        <th class="text-center">name</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var project in @Model.Projects)
                    {
                        <tr>
                            <td class="text-center">
                                @project.Name
                            </td>
                        </tr>
                    }
                    </tbody>
                    
                </table>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/Chart.min.js"></script>

<script>


    var pieData = [
        //BackLog
        {
            value: @Model.BacklogCount,
            label: "Backlog",
            color:"#6B00D6"
        },
        //To do
        {
            value: @Model.ToDoCount,
            label:"To Do",
            color:"#E32707"
        },
        //inprogress
        {
            value: @Model.InProgressCount,
            label:"In progress",
            color:"#E5750B"
        },
        //ReadyForReview
        {
            value: @Model.ReadyForReviewCount,
            label:"Ready for review",
            color:"#D9E812"
        },
        //Done
        {
            value: @Model.DoneCount,
            label:"Done",
            color:"#00D924"
        }
    ];

    var pieStatusData = [
        {
            value: @Model.MinorCount,
            label: "Minor",
            color: "#00CCCC"
        },
        {
            value: @Model.LowCount,
            label: "Low",
            color: "#53EF00"
        },
        {
            value: @Model.NormalCount,
            label: "Normal",
            color: "#FFDB00"
        },
        {
            value: @Model.HighCount,
            label: "High",
            color: "#FF7400"
        },
        {
            value: @Model.CriticalCount,
            label: "Critical",
            color: "#FF0000"
        }
    ];

    var pieCategoryData = [
         {
             value: @Model.TaskCount,
             label: "Task",
             color: "#00CCCC"
         },
        {
            value: @Model.BugCount,
            label: "Bug",
            color: "#FF0000"
        },
        {
            value: @Model.ImprovmentCount,
            label: "Improvment",
            color: "#FFDB00"
        }
    ];

    var pieOptions = {
        segmentShowStroke : true,
        animateScale : true
    }
    var context1= document.getElementById("myTasks").getContext("2d");
    var context2= document.getElementById("myTasks2").getContext("2d");
    var context3= document.getElementById("myTasks3").getContext("2d");
    //var context = $('#myTasks').get(0).getContext("2d");
    new Chart(context1).Doughnut(pieStatusData, pieOptions);
    new Chart(context2).Doughnut(pieData, pieOptions);
    new Chart(context3).Doughnut(pieCategoryData, pieOptions);
    /*var textCtx = document.getElementById("text").getContext("2d");
    textCtx.textAlign = "center";
    textCtx.textBaseline = "middle";
    textCtx.font = "30px sans-serif";
    textCtx.fillText(10, 100, 100);*/
</script>
